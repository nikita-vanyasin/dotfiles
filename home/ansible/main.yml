---
- name: My Thinkpad X1 gen9 laptop provisioning
  hosts: localhost
  become: yes
  vars:
    gen_warning: "WARNING! This file is controlled by Ansible script."
    local_home: "{{ lookup('env','HOME') }}"
    local_user: "{{ lookup('env','USER') }}"
  vars_prompt:
    - name: "my_password"
      prompt: "Enter password"
      private: yes
  tasks:
    - name: create and setup aur_builder user
      user: name=aur_builder
    - name: grant aur_builder more permissions
      lineinfile:
        path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
        state: present
        line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
        validate: /usr/bin/visudo -cf %s
        create: yes
    - name: create projects dir
      file:
        path: "{{ local_home }}/projects"
        state: directory
        mode: '0755'
    - name: packages
      pacman:
        update_cache: yes
        name:
          - base-devel
          - fish
          - fisher
          - fzf
          - mc
          - zip
          - tree
          - man-db
          - unzip
          - unrar
          - jq
          - sway
          - swaylock
          - swayidle
          - swaybg
          - xorg-xwayland
          - chrony
          - i3status
          - py3status
          - ttf-dejavu
          - ttf-opensans
          - pango
          - noto-fonts-emoji # TODO: install source code pro
          - zenity
          - perl-file-mimeinfo
          - dunst # TODO: replace with mako
          - go
          - go-tools
          - htop
          - fwupd
          - wget
          - pipewire
          - pipewire-pulse
          - pipewire-alsa
          - bluez
          - blueman
          - libappindicator-gtk3
          - bluez-hid2hci
          - udiskie
          - gnome-keyring
          - docker
          - docker-machine
          - kubectl
          - k9s
          - acpi
          - acpid # TODO: can be replaced with systemd probably
          - tlp
          - acpi_call
          - ethtool
          - efibootmgr
          - pavucontrol
          - vlc
          - sof-firmware
            #- soundfont-fluid
            #- moreutils
          - grim  # required for flameshot
          - micro
          - easyeffects 
          - lsp-plugins
          - tmux
          - fprintd
          - sof-firmware
          - alacritty
          - brightnessctl
          - vulkan-intel # google-chrome optional
          - python-pexpect # required for some ansible modules
          - telegram-desktop
          - ntfs-3g
    - name: AUR packages
      aur:
        name:
          - networkmanager-dispatcher-chrony
          - pulseaudio-ctl
          - flameshot-git
          - jetbrains-toolbox
          - google-chrome
          - fish-fishtape
          - fish-done
          - mailspring
          - xdg-desktop-portal-wlr-git # required for flameshot
          - dmenu-wayland-git
          - zoom
        state: present
      become: yes
      become_user: aur_builder
    - name: Handy symlink for mounted devices
      file:
        state: link
        force: yes
        owner: "{{ local_user }}"
        dest: "/home/{{ local_user }}/media"
        src: "/run/media/{{ local_user }}"
    - name: disable acpid events spam
      blockinfile:
        path: /etc/acpi/events/buttons
        create: yes
        content: |
          event=button/(up|down|left|right)
          action=<drop>
    - name: acpi event ac_adapter handler
      blockinfile:
        path: /etc/acpi/events/ac_adapter
        create: yes
        content: |
          event=ac_adapter
          action=/etc/acpi/actions/update-laptop-mode.sh %e
    - name: acpi handler update-laptop-mode
      blockinfile:
        path: /etc/acpi/actions/update-laptop-mode.sh
        create: yes
        mode: '0777'
        content: |
          #!/bin/sh
          case "$4" in
              00000000) echo -n "low-power" >/sys/firmware/acpi/platform_profile ;;
              00000001) echo -n "performance" >/sys/firmware/acpi/platform_profile ;;
              *) logger "Skipping unknown ac_adapter event value: $4" ;;
          esac
    - name: Enable and start acpid service
      systemd:
        enabled: yes
        state: started
        name: acpid
    - name: Enable and start bluetooth service
      systemd:
        enabled: yes
        state: started
        name: bluetooth
    - name: Set fish as default shell
      expect:
        command: "chsh -s /usr/bin/fish"
        responses:
          (?i)password: "{{ my_password }}"
        creates: ".shell_is_fish"
    - name: Add NTP servers to chrony config
      blockinfile:
        path: /etc/chrony.conf
        content: |
          server 0.ru.pool.ntp.org
          server 1.ru.pool.ntp.org
          server 2.ru.pool.ntp.org
          server 3.ru.pool.ntp.org
    - name: Enable and start chronyd service
      systemd:
        enabled: yes
        state: started
        name: chronyd
    - name: Configure TLP
      copy:
        force: yes
        dest: /etc/tlp.conf
        src: ./configs/tlp
      tags:
        - tlp
    - name: Enable and start tlp service
      systemd:
        enabled: yes
        state: started # TODO: started
        name: tlp
      tags:
        - tlp
    - name: Enable periodic TRIM on SSD devices
      systemd:
        enabled: yes
        state: started
        name: fstrim.timer
    - name: Setup a Login Screen look and feel
      copy:
        dest: /etc/issue
        src: ./configs/issue
        force: yes
    - name: Update Font cache
      command: fc-cache -f
    - name: Ensure fisher plugins updated
      become: yes
      become_user: "{{ local_user }}"
      shell: fisher update
      args:
        executable: /bin/fish
    - name: Add more power-saving options
      blockinfile:
        path: /etc/sysctl.d/powersave.conf
        create: yes
        content: |
          kernel.nmi_watchdog = 0
          vm.dirty_writeback_centisecs = 6000
    - name: Allow users to build Golang sources
      file:
        path: /usr/lib/go/pkg
        recurse: yes
        state: directory
        mode: '1777'
    - name: Enable SysRq hotkeys
      sysctl:
        name: kernel.sysrq
        value: '1'
        state: present
    - name: udev to disable touchscreen
      blockinfile:
        path: /etc/udev/rules.d/80-touchscreen.rules
        create: yes
        content: |
          ACTION=="bind", SUBSYSTEM=="hid", ENV{HID_ID}="0018:000004F3:00002C4E", RUN+="/bin/bash -c 'basename $DEVPATH > /sys/bus/hid/drivers/hid-multitouch/unbind'"
    #- name: Kernel modules blacklist
      #blockinfile:
        #path: /etc/modprobe.d/blacklist.conf
        #create: yes
#        content: |
#blacklist snd_hda_intel
# blacklist snd_soc_skl
      #- name: Disable some wake-from-suspend events
      #copy:
          #dest: /etc/tmpfiles.d/disable-wakeup-events.conf
          #content: |
          #w+ /proc/acpi/wakeup - - - - RP01
          #w+ /proc/acpi/wakeup - - - - RP09
          #w+ /proc/acpi/wakeup - - - - RP13
    - name: Install easyeffects presets
      ansible.builtin.git:
        repo: https://github.com/JackHack96/EasyEffects-Presets.git
        dest: "{{ local_home}}/.config/easyeffects/output"