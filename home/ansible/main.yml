---
- name: My Thinkpad X1 gen7 laptop provisioning
  hosts: localhost
  become: yes
  vars:
    gen_warning: "WARNING! This file is controlled by Ansible script."
    local_home: "{{ lookup('env','HOME') }}"
    local_user: "{{ lookup('env','USER') }}"
  tasks:
    - name: create and setup aur_builder user
      user: name=aur_builder
    - name: grant aur_builder more permissions
      lineinfile:
        path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
        state: present
        line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
        validate: /usr/bin/visudo -cf %s
        create: yes
    - name: create projects dir
      file:
        path: "{{ local_home }}/projects"
        state: directory
        mode: '0755'
    - name: packages
      pacman:
        update_cache: yes
        name:
          - mc
          - xf86-video-intel
          - xorg
          - xorg-xinit
          #- i3
          - xf86-input-libinput
          - chrony
          - py3status
          - dmenu
          - pango
          - ttf-dejavu
          - zenity
          - thunderbird
          - xdg-utils
          - perl-file-mimeinfo
          - dunst
          - go
          - htop
          - tor
          - fwupd
          - wget
          - pulseaudio
          - blueman
          - pulseaudio-bluetooth
          - ntfs-3g
          - udiskie
          - docker
          - docker-compose
          - docker-machine
          - remmina
          - freerdp
          - virtualbox
          - virtualbox-guest-iso
          - acpi
          - acpid
          - ttf-opensans
          - telegram-desktop
          - xclip
          - tlp
          - tp_smapi
          - acpi_call
          - ethtool
          - iotop
    - name: AUR packages
      aur:
        name:
          - rxvt-unicode-patched
          - xinit-xsession
          - networkmanager-dispatcher-chrony
          - j4-dmenu-desktop-git
          - pulseaudio-ctl
          - flameshot-git
          - jetbrains-toolbox
          - safeeyes
          - google-chrome
          - watson
          - antibody
          - profile-sync-daemon
        skip_installed: yes
      become: yes
      become_user: aur_builder
    - name: generate Xorg fonts index 100dpi
      command: mkfontdir /usr/share/fonts/100dpi
    - name: Configure display size (automatically detected size is incorrect)
      blockinfile:
        path: "/etc/X11/xorg.conf.d/90-monitor.conf"
        create: yes
        content: |
          Section "Monitor"
            Identifier    "<default monitor>"
            DisplaySize   310 174
          EndSection
    - name: Configure Keyboard layout and toggling
      blockinfile:
        path: "/etc/X11/xorg.conf.d/00-keyboard.conf"
        create: yes
        content: |
          Section "InputClass"
            Identifier "system-keyboard"
            MatchIsKeyboard "on"
            Option "XkbLayout" "us,ru"
            Option "XkbOptions" "grp:caps_toggle,grp_led:caps"
          EndSection
    - name: Configure Volume control buttons
      blockinfile:
        path: "/usr/share/pulseaudio/alsa-mixer/paths/analog-output.conf.common"
        marker: "; {mark} ANSIBLE MANAGED BLOCK"
        insertbefore: \[Element PCM\]
        content: |
          [Element Master]
          switch = mute
          volume = ignore
    - name: Congfigure Backlight control
      blockinfile:
        path: "/etc/X11/xorg.conf.d/10-intel_backlight.conf"
        create: yes
        content: |
          Section "Device"
            Identifier  "card0"
            Driver      "intel"
            Option      "Backlight"  "intel_backlight"
            BusID       "PCI:0:2:0"
          EndSection
    - name: Configure xf86-video-intel
      blockinfile:
        path: "/etc/X11/xorg.conf.d/20-intel.conf"
        create: yes
        content: |
          Section "Device"
            Identifier  "Intel Graphics"
            Driver      "intel"
            Option      "AccelMethod"  "glamor"
          EndSection
    - name: Lock screen automatically on Wake from sleep (suspend)
      blockinfile:
        path: /etc/systemd/system/wakelock.service
        create: yes
        content: |
          [Unit]
          Description=Runs i3lock on system resume from a suspended state
          Before=systemd-suspend.service
          
          [Service]
          User={{ local_user }}
          Type=forking
          Environment=DISPLAY=:0
          ExecStart=/usr/bin/i3lock -c '#000000'
          
          [Install]
          WantedBy=sleep.target
          WantedBy=suspend.target
          
    - name: Enable wakelock service
      systemd:
        enabled: yes
        name: wakelock
    - name: Handy symlink for mounted devices
      file:
        state: link
        force: yes
        owner: "{{ local_user }}"
        dest: "/home/{{ local_user }}/media"
        src: "/run/media/{{ local_user }}"
    - name: Enable and start docker service
      systemd:
        enabled: yes
        state: started
        name: docker
    - name: Add Mic Mute keyboard event handler (Fn+F4=F20)
      copy:
        content: |
          # {{ gen_warning }}
          event=button/f20 F20 00000080 00000000 K
          action=/etc/acpi/lenovo-mutemic.sh
        dest: /etc/acpi/events/lenovo-mutemic
    - name: Add Mic Mute LED control script
      copy:
        content: |
          #!/bin/bash
          # {{ gen_warning }}
          INPUT_DEVICE="'Capture'"
          LED_BRIGHTNESS="/sys/devices/platform/thinkpad_acpi/leds/platform::micmute/brightness"
          if amixer sget $INPUT_DEVICE,0 | grep '\[on\]' ; then
              if [ "$1" != "update_led_only" ]; then
                  amixer sset $INPUT_DEVICE,0 nocap
              fi
              echo "1" > $LED_BRIGHTNESS
          else
              if [ "$1" != "update_led_only" ]; then
                  amixer sset $INPUT_DEVICE,0 cap
              fi
              echo "0" > $LED_BRIGHTNESS
          fi
        dest: /etc/acpi/lenovo-mutemic.sh
        mode: 0777
    - name: Enable and start acpid service
      systemd:
        enabled: yes
        state: started
        name: acpid
    - name: Add NTP servers to chrony config
      blockinfile:
        path: /etc/chrony.conf
        content: |
          server 0.ru.pool.ntp.org
          server 1.ru.pool.ntp.org
          server 2.ru.pool.ntp.org
          server 3.ru.pool.ntp.org
    - name: Enable and start chronyd service
      systemd:
        enabled: yes
        state: started
        name: chronyd
    - name: Configure TLP
      copy:
        force: yes
        dest: /etc/default/tlp
        src: ./configs/tlp
    - name: Enable and start tlp service
      systemd:
        enabled: yes
        state: started
        name: tlp
    - name: Enable and start tlp-sleep service
      systemd:
        enabled: yes
        state: started
        name: tlp-sleep
    - name: Update zsh plugins
      become: yes
      become_user: "{{ local_user }}"
      command: "{{ local_home }}/scripts/update_zsh_plugins.sh"
    - name: Enable periodic TRIM on SSD devices
      systemd:
        enabled: yes
        state: started
        name: fstrim.timer
    - name: Allow user to use overlayfs for profile-sync-daemon
      blockinfile:
        path: /etc/sudoers
        marker: "## {mark} ANSIBLE MANAGED BLOCK"
        content: |
          {{ local_user }} ALL=(ALL) NOPASSWD: /usr/bin/psd-overlay-helper
    - name: Enable and start Profile Sync Daemon service
      systemd:
        enabled: yes
        scope: user
        state: started
        name: psd
      become: yes
      become_user: "{{ local_user }}"
    - name: Setup a Login Screen look and feel
      copy:
        dest: /etc/issue
        src: ./configs/issue
        force: yes
    - name: move .cache folder to RAM
      blockinfile:
        path: /etc/fstab
        content: |
          tmpfs	/home/nikita/.cache	tmpfs	noatime,nodev,nosuid,size=1024M	0	0
        